<?xml version="1.0" encoding="utf-8"?>
<xml2j-generator 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns="urn:xml2j.sourceforge.io">
 	<domain 
		base="com.xml2j"
		name="tutorial">
		
 		<!-- the module name is used as an extension for generation of the package-name -->
		<!-- the domain's base is the working directory (e.g. tutorial) -->
		<!-- for a module its base is relative to the domain's (e.g. tutorial/choice) -->
		<!-- paths are relative to the module (e.g. schema <-> tutorial/choice/schema) -->
		
		<module name="choice" 
				input-path="schema" 
				output-path="src/main/java">
 			<!-- for each XSD the root type to be handled and the name of the handler 
 			     class are specified -->	
 			<interface 
 				name="schema.xsd" 						
 				message-handler-root="container" 	
 				message-handler-name="ChoiceMessageHandler"
				message-handler-processor="ChoiceProcessor"
				message-handler-application="ChoiceApplication"/>
 		</module>
		<module name="ext" 
				input-path="schema" 
				output-path="src/main/java">
 			<!-- for each XSD the root type to be handled and the name of the handler 
 			     class are specified -->	
 			<interface 
 				name="schema.xsd" 	
 				message-handler-root="ProductContainer" 	
 				message-handler-name="ExtMessageHandler"
				message-handler-processor="ExtProcessor"
				message-handler-application="ExtApplication"/>
 		</module>
		<module name="group" 
				input-path="schema" 
				output-path="src/main/java">
 			<!-- for each XSD the root type to be handled and the name of the handler 
 			     class are specified -->	
 			<interface 
 				name="schema.xsd" 						
 				message-handler-root="container" 	
 				message-handler-name="GroupMessageHandler"
				message-handler-processor="GroupProcessor"
				message-handler-application="GroupApplication"/>

 		</module>
		<module name="reserved" 
				input-path="schema" 
				output-path="src/main/java">
 			<!-- for each XSD the root type to be handled and the name of the handler 
 			     class are specified -->	
 			<interface 
 				name="schema.xsd" 						
 				message-handler-root="container" 	
 				message-handler-name="ReservedMessageHandler"
				message-handler-processor="ReservedProcessor"
				message-handler-application="ReservedApplication"/>
				
 		</module>
		<module name="seq1" 
				input-path="schema" 
				output-path="src/main/java">
 			<!-- for each XSD the root type to be handled and the name of the handler 
 			     class are specified -->	
 			<interface 
 				name="schema.xsd" 						
 				message-handler-root="container" 	
 				message-handler-name="SeqMessageHandler"
				message-handler-processor="SeqProcessor"
				message-handler-application="SeqApplication"/>
 		</module>
		<module name="seq2" 
				input-path="schema" 
				output-path="src/main/java">
 			<!-- for each XSD the root type to be handled and the name of the handler 
 			     class are specified -->	
 			<interface 
 				name="schema.xsd" 						
 				message-handler-root="container" 	
 				message-handler-name="SeqMessageHandler"
				message-handler-processor="SeqProcessor"
				message-handler-application="SeqApplication"/>
 		</module>
		<module name="seq3" 
				input-path="schema" 
				output-path="src/main/java">
 			<!-- for each XSD the root type to be handled and the name of the handler 
 			     class are specified -->	
 			<interface 
 				name="schema.xsd" 						
 				message-handler-root="container" 	
 				message-handler-name="SeqMessageHandler"
				message-handler-processor="SeqProcessor"
				message-handler-application="SeqApplication"/>
 		</module>
		<module name="seq4" 
				input-path="schema" 
				output-path="src/main/java">
 			<!-- for each XSD the root type to be handled and the name of the handler 
 			     class are specified -->	
 			<interface 
 				name="schema.xsd" 						
 				message-handler-root="container" 	
 				message-handler-name="SeqMessageHandler"
				message-handler-processor="SeqProcessor"
				message-handler-application="SeqApplication"/>
 		</module>
		<module name="subst" 
				input-path="schema" 
				output-path="src/main/java">
 			<!-- for each XSD the root type to be handled and the name of the handler 
 			     class are specified -->	
 			<interface 
 				name="schema.xsd" 						
 				message-handler-root="container" 	
 				message-handler-name="SubstMessageHandler"
				message-handler-processor="SubstProcessor"
				message-handler-application="SubstApplication"/>
 		</module>
		<module name="subst2" 
				input-path="schema" 
				output-path="src/main/java">
 			<!-- for each XSD the root type to be handled and the name of the handler 
 			     class are specified -->	
 			<interface 
 				name="schema.xsd" 						
 				message-handler-root="library" 	
 				message-handler-name="Subst2MessageHandler"
				message-handler-processor="Subst2Processor"
				message-handler-application="Subst2Application"/>
 		</module>
		<module name="zoo" 
				input-path="schema" 
				output-path="src/main/java">
 			<!-- for each XSD the root type to be handled and the name of the handler 
 			     class are specified -->	
 			<interface 
 				name="schema.xsd" 						
 				message-handler-root="zooCollection" 	
 				message-handler-name="ZooCollectionMessageHandler"
				message-handler-processor="ZooProcessor"
				message-handler-application="ZooApplication"/>
 		</module>
	</domain>
</xml2j-generator>
